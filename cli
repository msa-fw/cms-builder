<?php

use System\Singleton;
use System\Core\Console\Debug;

$args = array_map('trim', $_SERVER['argv']);

define("CLI_ROOT_PATH", $args[0]);

$requestCommand = implode(' ', array_slice($args, 1));

require_once __DIR__ . "/core.php";

$consoleDebug = Debug::start($requestCommand);

// for calling error handler
$debug = Singleton::Debug();


$events = Singleton::Events();
$events->loadControllersParams("configs/events.php");
Singleton::Events()->afterEventsInitialize()->run($events);


Singleton::Events()->beforeSystemStart()->run();


$config = Singleton::Config();
Singleton::Events()->beforeConfigInitialize()->run($config);

$config->initialize();
$config->loadControllersParams("configs/config.php");
Singleton::Events()->afterConfigInitialize()->run($config);


$language = Singleton::Language();
Singleton::Events()->beforeLanguageInitialize()->run($language);

$languageCode = $config->general('language')->read('en');
$language->loadControllersParams("languages/$languageCode.php");
Singleton::Events()->afterLanguageInitialize()->run($language);

$router = Singleton::Console();
$router->loadControllersParams("configs/console.php");
Singleton::Events()->beforeCommandLineRunning()->run($router, $requestCommand);

$result = $router->runController($requestCommand);
Singleton::Events()->afterCommandLineRunning()->run($router, $result);


Singleton::Events()->afterSystemStart()->run();

$consoleDebug->end();